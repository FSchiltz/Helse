{
  "openapi": "3.0.1",
  "info": {
    "title": "Helse Api",
    "version": "v1"
  },
  "paths": {
    "/api/auth": {
      "post": {
        "tags": [
          "AuthLogic"
        ],
        "description": "Get a connection token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/status": {
      "get": {
        "tags": [
          "AuthLogic"
        ],
        "description": "Check if the server install is ready",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/api/events": {
      "get": {
        "tags": [
          "EventsLogic"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "personId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "EventsLogic"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/events/{id}": {
      "delete": {
        "tags": [
          "EventsLogic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/events/type": {
      "post": {
        "tags": [
          "EventsLogic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "EventsLogic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "EventsLogic"
        ],
        "parameters": [
          {
            "name": "all",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventType"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/events/type/{id}": {
      "delete": {
        "tags": [
          "EventsLogic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/import/types": {
      "get": {
        "tags": [
          "ImportLogic"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileType"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/import/{type}": {
      "post": {
        "tags": [
          "ImportLogic"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/import": {
      "post": {
        "tags": [
          "ImportLogic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/metrics": {
      "get": {
        "tags": [
          "MetricsLogic"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "personId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "MetricsLogic"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMetric"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/metrics/{id}": {
      "delete": {
        "tags": [
          "MetricsLogic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/metrics/type": {
      "post": {
        "tags": [
          "MetricsLogic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "MetricsLogic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "MetricsLogic"
        ],
        "parameters": [
          {
            "name": "all",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MetricType"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/metrics/type/{id}": {
      "delete": {
        "tags": [
          "MetricsLogic"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/patients": {
      "get": {
        "tags": [
          "PatientsLogic"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/patients/agenda": {
      "get": {
        "tags": [
          "PatientsLogic"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/person": {
      "post": {
        "tags": [
          "PersonLogic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCreation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "PersonLogic"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/person/role": {
      "post": {
        "tags": [
          "PersonLogic"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/person/rights/{personId}": {
      "post": {
        "tags": [
          "PersonLogic"
        ],
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Right"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admin/settings/oauth": {
      "post": {
        "tags": [
          "SettingsLogic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Oauth"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "SettingsLogic"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Oauth"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/admin/settings/proxy": {
      "post": {
        "tags": [
          "SettingsLogic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Proxy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "SettingsLogic"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proxy"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/treatment": {
      "post": {
        "tags": [
          "TreatmentLogic"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTreatment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "TreatmentLogic"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "personId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Treatement"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/treatment/type": {
      "get": {
        "tags": [
          "TreatmentLogic"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventType"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Connection": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "redirect": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEvent": {
        "type": "object",
        "properties": {
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "stop": {
            "type": "string",
            "format": "date-time"
          },
          "tag": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateMetric": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "tag": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "format": "int64"
          },
          "source": {
            "$ref": "#/components/schemas/FileTypes"
          }
        },
        "additionalProperties": false
      },
      "CreateTreatment": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateEvent"
            },
            "nullable": true
          },
          "personId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Event": {
        "type": "object",
        "properties": {
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "stop": {
            "type": "string",
            "format": "date-time"
          },
          "tag": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "type": "integer",
            "format": "int64"
          },
          "file": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "treatment": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "person": {
            "type": "integer",
            "format": "int64"
          },
          "valid": {
            "type": "boolean"
          },
          "address": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "standAlone": {
            "type": "boolean"
          },
          "userEditable": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FileType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileTypes": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "\n\n0 = None\n\n1 = RedmiWatch\n\n2 = GoogleHealthConnect",
        "format": "int32",
        "x-enumNames": [
          "None",
          "RedmiWatch",
          "GoogleHealthConnect"
        ]
      },
      "ImportData": {
        "type": "object",
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateMetric"
            },
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateEvent"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Metric": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "tag": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "integer",
            "format": "int64"
          },
          "source": {
            "$ref": "#/components/schemas/FileTypes"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "person": {
            "type": "integer",
            "format": "int64"
          },
          "user": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "MetricDataType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "\n\n0 = Text\n\n1 = Number",
        "format": "int32",
        "x-enumNames": [
          "Text",
          "Number"
        ]
      },
      "MetricSummary": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "\n\n0 = Latest\n\n1 = Sum\n\n2 = Mean",
        "format": "int32",
        "x-enumNames": [
          "Latest",
          "Sum",
          "Mean"
        ]
      },
      "MetricType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "summaryType": {
            "$ref": "#/components/schemas/MetricSummary"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/MetricDataType"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userEditable": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Oauth": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "autoRegister": {
            "type": "boolean"
          },
          "autoLogin": {
            "type": "boolean"
          },
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "tokenurl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Person": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "birth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/UserType"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "rights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Right"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "PersonCreation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "birth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/UserType"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "rights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Right"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Proxy": {
        "type": "object",
        "properties": {
          "proxyAuth": {
            "type": "boolean"
          },
          "autoRegister": {
            "type": "boolean"
          },
          "header": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Right": {
        "type": "object",
        "properties": {
          "personId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "stop": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/RightType"
          }
        },
        "additionalProperties": false
      },
      "RightType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "\n\n1 = View\n\n2 = Edit",
        "format": "int32",
        "x-enumNames": [
          "View",
          "Edit"
        ]
      },
      "Status": {
        "type": "object",
        "properties": {
          "init": {
            "type": "boolean"
          },
          "externalAuth": {
            "type": "boolean"
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "oauth": {
            "type": "string",
            "nullable": true
          },
          "oauthId": {
            "type": "string",
            "nullable": true
          },
          "autoLogin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Treatement": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            },
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/TreatmentType"
          }
        },
        "additionalProperties": false
      },
      "TreatmentType": {
        "enum": [
          0
        ],
        "type": "integer",
        "description": "\n\n0 = Care",
        "format": "int32",
        "x-enumNames": [
          "Care"
        ]
      },
      "UserType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "\n\n0 = Patient\n\n1 = User\n\n2 = Admin\n\n3 = Caregiver",
        "format": "int32",
        "x-enumNames": [
          "Patient",
          "User",
          "Admin",
          "Caregiver"
        ]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 1safsfsdfdfd\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}