
CREATE SCHEMA health;

CREATE TABLE health.Treatment
(
  Id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  PrescriptionId BIGINT NULL    ,
  Type           INT    NOT NULL
);

CREATE TABLE health.Event
(
  Id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  PersonId    BIGINT   NOT NULL,
  UserId      BIGINT   NOT NULL,
  FileId      BIGINT   NULL    ,
  TreatmentId BIGINT   NULL,
  Type        INT      NOT NULL,
  Description VARCHAR  NULL    ,
  Start       TIMESTAMP NOT NULL    ,
  Stop         TIMESTAMP NOT NULL,
  Valid       BOOL     NOT NULL DEFAULT False,
  AddressId     BIGINT   NULL,
  Tag     VARCHAR  NULL    
);

CREATE TABLE health.Metric
(
  Id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  PersonId BIGINT   NOT NULL,
  UserId   BIGINT   NOT NULL,
  Date     TIMESTAMP NOT NULL,
  Value    VARCHAR  NOT NULL,
  Tag     VARCHAR  NULL    ,
  Type  BIGINT NOT NULL
);

CREATE INDEX IF NOT EXISTS metric_date_type_personid_idx
    ON health.metric USING btree
    (date ASC NULLS LAST)
    INCLUDE(type, personid);

CREATE INDEX IF NOT EXISTS metric_tag_personid_idx
    ON health.metric USING btree
    (tag COLLATE pg_catalog."default" ASC NULLS LAST)
    INCLUDE(personid)
    TABLESPACE pg_default;

CREATE TABLE health.Prescription
(
  Id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  UserId   BIGINT   NOT NULL,
  FileId   BIGINT   NOT NULL,
  PersonId BIGINT   NOT NULL,
  Start    TIMESTAMP NOT NULL,
  Stop     TIMESTAMP NULL    
);

CREATE TABLE health.MetricType 
(
  Id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  Description VARCHAR NULL,
  Name VARCHAR NOT NULL,
  Unit VARCHAR NULL
);

CREATE TABLE health.EventType 
(
  Id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  Description VARCHAR NULL,
  Name VARCHAR NOT NULL
);

ALTER TABLE health.Event
  ADD CONSTRAINT FK_Person_TO_Event
    FOREIGN KEY (PersonId)
    REFERENCES person.Person (Id);

ALTER TABLE health.Metric
  ADD CONSTRAINT FK_Person_TO_Metric
    FOREIGN KEY (PersonId)
    REFERENCES person.Person (Id);

ALTER TABLE health.Metric
  ADD CONSTRAINT FK_User_TO_Metric
    FOREIGN KEY (UserId)
    REFERENCES person.User (Id);

ALTER TABLE health.Metric
  ADD CONSTRAINT FK_Type_TO_Metric
    FOREIGN KEY (Type)
    REFERENCES health.MetricType (Id);

ALTER TABLE health.Event
  ADD CONSTRAINT FK_Type_TO_Event
    FOREIGN KEY (Type)
    REFERENCES health.EventType (Id);

ALTER TABLE health.Event
  ADD CONSTRAINT FK_User_TO_Event
    FOREIGN KEY (UserId)
    REFERENCES person.User (Id);

ALTER TABLE health.Prescription
  ADD CONSTRAINT FK_Person_TO_Prescription
    FOREIGN KEY (PersonId)
    REFERENCES person.Person (Id);

ALTER TABLE health.Event
  ADD CONSTRAINT FK_Files_TO_Event
    FOREIGN KEY (FileId)
    REFERENCES file.Files (Id);

ALTER TABLE health.Event
  ADD CONSTRAINT FK_Treatment_TO_Event
    FOREIGN KEY (TreatmentId)
    REFERENCES health.Treatment (Id);

ALTER TABLE health.Event
  ADD CONSTRAINT FK_Address_TO_Event
    FOREIGN KEY (AddressId)
    REFERENCES person.Address (Id);      

ALTER TABLE health.Prescription
  ADD CONSTRAINT FK_User_TO_Prescription
    FOREIGN KEY (UserId)
    REFERENCES person.User (Id);

ALTER TABLE health.Prescription
  ADD CONSTRAINT FK_Files_TO_Prescription
    FOREIGN KEY (FileId)
    REFERENCES file.Files (Id);

ALTER TABLE health.Treatment
  ADD CONSTRAINT FK_Prescription_TO_Treatment
    FOREIGN KEY (PrescriptionId)
    REFERENCES health.Prescription (Id);
