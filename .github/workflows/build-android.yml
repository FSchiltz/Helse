name: Build Android
on:
  workflow_call:
    inputs:
      push:
        required: true
        type: boolean
      
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PROPERTIES_PATH: "App/android/key.properties"
  
jobs:
  build:
    runs-on: ubuntu-latest    
    steps:
    - uses: actions/checkout@v4.1.4

    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Install Flutter
      uses: subosito/flutter-action@v2.14.0
      with:
         channel: 'beta'
         # Enables cache for flutter packages              
         # Speed up the process
         cache: true
         
     # Get Flutter project dependencies
    - name: Get dependencies
      run: flutter pub get
      working-directory: 'App'
    
    - name: Create certificat
      run: |
        echo keyPassword=${{ secrets.KEY_STORE }} > ${{env.PROPERTIES_PATH}}
        echo storePassword=${{ secrets.KEY_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
        echo keyAlias=${{ vars.KEY_ALIAS }} >> ${{env.PROPERTIES_PATH}}
        echo storeFile=key.jks >> ${{env.PROPERTIES_PATH}}
        
    - name: Decoding base64 key into a file
      run: echo ${{ secrets.KEY_FILE }} | base64 --decode > App/android/app/key.jks
  
        
    - name: Build release app bundle
      run: flutter build apk --release --split-per-abi
      working-directory: 'App'   

    - name: Finding binaries files
      if: ${{ inputs.push }}
      id: finding-files        
      run: |
        {
          cd App/build/app/outputs/flutter-apk
          echo 'FILELIST<<EOF'
          find . -name '*-release.apk' -print 
          echo EOF
        } >> "$GITHUB_ENV"

    - name: Upload artefact
      uses: actions/upload-artifact@v2
      with:
        path: App/build/app/outputs/flutter-apk/*.apk
      
    - name: Upload binaries to release
      if: ${{ inputs.push }}
      run: |
        cd App/build/app/outputs/flutter-apk
        for i in $FILELIST; do        
          gh release upload ${{github.event.release.tag_name}} ${i}   
        done  
      env:
        GH_TOKEN: ${{ github.token }}
    
      
